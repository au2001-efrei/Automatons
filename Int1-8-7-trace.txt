
1. Reading automaton...
Alphabet: a
Initial states: 1
Terminal states: 0
Transition table:
  /  |  a  
-----+-----
 ← 0 |     
 → 1 | 0 1 

2. Determinizing and completing automaton...
Alphabet: a
Initial states: 1
Terminal states: 0,1
Transition table:
   /   |  a  
-------+-----
 ← 0,1 | 0,1 
  → 1  | 0,1 

3. Minimizing automaton...
Alphabet: a
Initial states: 1
Terminal states: 0,1
Transition table:
   /   |  a  
-------+-----
 ← 0,1 | 0,1 
  → 1  | 0,1 

4. Starting word recognition...
This step was skipped in this output file.
Execute the program to test word recognition by yourself.

5. Creating an automaton which recognizes the complementary language...
Alphabet: a
Initial states: 1
Terminal states: 1
Transition table:
  /   |  a  
------+-----
 0,1  | 0,1 
 ←→ 1 | 0,1 

6. Starting word recognition...
This step was skipped in this output file.
Execute the program to test word recognition by yourself.

7. Standardizing automaton...
Alphabet: a
Initial states: 1
Terminal states: 1
Transition table:
  /   |  a  
------+-----
 0,1  | 0,1 
 ←→ 1 | 0,1 

8. Starting word recognition...
This step was skipped in this output file.
Execute the program to test word recognition by yourself.
