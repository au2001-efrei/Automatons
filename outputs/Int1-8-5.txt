
1. Reading automaton...
Alphabet: a b
Initial states: 1 3
Terminal states: 2 4
Transition table:
  /  | a | b 
-----+---+---
  0  | 0 | 0 
 → 1 | 2 | 0 
 ← 2 |   |   
 → 3 | 0 | 4 
 ← 4 |   |   

2. Determinizing and completing automaton...
Alphabet: a b
Initial states: 1,3
Terminal states: 0,2 0,4
Transition table:
   /   |  a  |  b  
-------+-----+-----
   0   |  0  |  0  
 ← 0,2 |  0  |  0  
 ← 0,4 |  0  |  0  
 → 1,3 | 0,2 | 0,4 

3. Minimizing automaton...
Alphabet: a b
Initial states: 1,3
Terminal states: 0,2+0,4
Transition table:
     /     |    a    |    b    
-----------+---------+---------
     0     |    0    |    0    
 ← 0,2+0,4 |    0    |    0    
   → 1,3   | 0,2+0,4 | 0,2+0,4 

4. Starting word recognition...
This step was skipped in this output file.
Execute the program to test word recognition by yourself.

5. Creating an automaton which recognizes the complementary language...
Alphabet: a b
Initial states: 1,3
Terminal states: 0 1,3
Transition table:
    /    |    a    |    b    
---------+---------+---------
   ← 0   |    0    |    0    
 0,2+0,4 |    0    |    0    
  ←→ 1,3 | 0,2+0,4 | 0,2+0,4 

6. Starting word recognition...
This step was skipped in this output file.
Execute the program to test word recognition by yourself.

7. Standardizing automaton...
Alphabet: a b
Initial states: 1,3
Terminal states: 0 1,3
Transition table:
    /    |    a    |    b    
---------+---------+---------
   ← 0   |    0    |    0    
 0,2+0,4 |    0    |    0    
  ←→ 1,3 | 0,2+0,4 | 0,2+0,4 

8. Starting word recognition...
This step was skipped in this output file.
Execute the program to test word recognition by yourself.
