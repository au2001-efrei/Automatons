
1. Reading automaton...
Alphabet: a b c
Initial states: 2
Terminal states: 2
Transition table:
  /   | a | b | c 
------+---+---+---
  0   | 3 | 2 | 3 
  1   | 0 | 2 |   
 ←→ 2 | 1 | 4 | 4 
  3   | 3 | 3 | 3 
  4   | 4 | 4 | 4 

2. Determinizing and completing automaton...
Alphabet: a b c
Initial states: 2
Terminal states: 2
Transition table:
  /   | a | b | c 
------+---+---+---
  0   | 3 | 2 | 3 
  1   | 0 | 2 | X 
 ←→ 2 | 1 | 4 | 4 
  3   | 3 | 3 | 3 
  4   | 4 | 4 | 4 
  X   | X | X | X 

3. Minimizing automaton...
Alphabet: a b c
Initial states: 2
Terminal states: 2
Transition table:
   /   |   a   |   b   |   c   
-------+-------+-------+-------
   0   | 3+4+X |   2   | 3+4+X 
   1   |   0   |   2   | 3+4+X 
  ←→ 2 |   1   | 3+4+X | 3+4+X 
 3+4+X | 3+4+X | 3+4+X | 3+4+X 

4. Starting word recognition...
This step was skipped in this output file.
Execute the program to test word recognition by yourself.

5. Creating an automaton which recognizes the complementary language...
Alphabet: a b c
Initial states: 2
Terminal states: 0 1 3+4+X
Transition table:
    /    |   a   |   b   |   c   
---------+-------+-------+-------
   ← 0   | 3+4+X |   2   | 3+4+X 
   ← 1   |   0   |   2   | 3+4+X 
   → 2   |   1   | 3+4+X | 3+4+X 
 ← 3+4+X | 3+4+X | 3+4+X | 3+4+X 

6. Starting word recognition...
This step was skipped in this output file.
Execute the program to test word recognition by yourself.

7. Standardizing automaton...
Alphabet: a b c
Initial states: I
Terminal states: 0 1 3+4+X
Transition table:
    /    |   a   |   b   |   c   
---------+-------+-------+-------
   ← 0   | 3+4+X |   2   | 3+4+X 
   ← 1   |   0   |   2   | 3+4+X 
    2    |   1   | 3+4+X | 3+4+X 
 ← 3+4+X | 3+4+X | 3+4+X | 3+4+X 
   → I   |   1   | 3+4+X | 3+4+X 

8. Starting word recognition...
This step was skipped in this output file.
Execute the program to test word recognition by yourself.
